---
title: "Introduction to Data Bases"
subtitle: "IN2004B: Generation of Value with Data Analytics"
author: 
  - name: Alan R. Vazquez
    affiliations:
      - name: Department of Industrial Engineering
format: 
  revealjs:
    chalkboard: false
    multiplex: false
    footer: "Tecnologico de Monterrey"
    logo: IN2004B_logo.png
    css: style.css
    slide-number: True
    html-math-method: mathjax
editor: visual
jupyter: python3
---

## Agenda

</br>

1. Dashboards for Visualizing Indicators
2. Databases for Storing Indicators

# Dashboards for Visualizing Indicators

## The Balanced Scorecard

Once the indicators are defined using the Balanced Scorecard and the documentation format, the dashboards are designed:

- Screens,
- Chart and table styles,
- Aggregation levels,
- Default reports,
- Drill-down requirements.

This applies to both the overall organizational level and the functional BSCs.

## Dashboard Deployment

Various strategies can be followed to implement the dashboards, for example:

- Development on a specialized platform for indicator systems (<https://www.predictiveanalyticstoday.com/open-source-balanced-scorecard-software/>)

- Development with generic OLAP Online Analytical Processing tools (<https://www.softwaretestinghelp.com/best-olap-tools/>)

- Short-term, isolated implementations in spreadsheets.

## Tableu Dashboard Example

![](images/clipboard-3862420324.png)

<https://www.tableau.com/es-mx>

## Another Example

![](images/clipboard-686396046.png)

# Databases for Storing Indicators

## Context

Although the data for calculating some indicators originates outside the organization, the vast majority of data comes from the business's internal databases.

Companies vary widely, from those with isolated applications with scattered databases and spreadsheet files to highly organized companies with a centralized database system on a data server and linked applications.

##

To obtain the data needed to calculate indicators, it is often necessary to integrate data from various sources within the company. For this, ETL (extract-transform-load) and data warehousing tools are used.

## What is a Database?

Basically, a data table where rows represent a set of occurrences of an entity (customers, products, patients, orders) and columns represent attributes or characteristics that describe the entity (customer: ID + name + address + email + balance). In IT, the concept of a "database" does not refer to a table, but rather to a set of related tables.

## Database Terminology

Tables contain data that refers to:

- an entity about which the organization needs to maintain information
- relationships between entities

The rows of the table are called *records*.

The columns of the table are called *fields*.

## 

::::: columns
::: {.column width="60%"}
Records are distinct occurrences of the corresponding entity.

Fields are attributes that describe the entity.

Each record has one or more fields that uniquely identify each record; these fields are called "keys."
:::

::: {.column width="40%"}
![](images/clipboard-1851897012.png)
:::
:::::

## Relational Databases

- Currently, the most widely used database model in the world is relational databases. See, for example:

- <https://db-engines.com/en/ranking>

- <https://www.dataversity.net/database-management-trends-in-2020/>

- The emergence of big data applications makes these databases the primary source of data for business indicators.

## Relational Database Example

![](images/clipboard-2062527429.png)

## Example

::::: columns
::: {.column width="60%"}
- The database has four tables: Patients, Medicines, Prescriptions, and Prescription Details.

- The table containing data for the "patient" entity has the following fields: unique identifier, name, address, date of birth, phone number, and photo.
:::

::: {.column width="40%"}
![](images/clipboard-3132665686.png)
:::
:::::

## 

::::: columns
::: {.column width="60%"}
- The prescription table contains the general data for each prescription issued: prescription number (this is the key), date, consultation time, an indicator of whether it contains controlled medications or not, and the patient identifier. This field allows you to ***relate the prescription data*** with the patient data.
:::

::: {.column width="40%"}
![](images/clipboard-3132665686.png)
:::
:::::

## 

::::: columns
::: {.column width="60%"}
- The medicine table has the following fields: medicine identifier, generic description, active agent, most common presentation, and contraindications.:::

::: {.column width="40%"}
![](images/clipboard-3132665686.png)
:::
:::::

## 

::::: columns
::: {.column width="60%"}
- The prescription detail table contains the rows for each prescription. Since some prescriptions may have only one medication, and some may have two, three, or more medications, in the relational model, the rows for all prescriptions are stored in a single table. All the rows in a prescription have the same "prescription number" but a different "medication ID"...
:::

::: {.column width="40%"}
![](images/clipboard-3132665686.png)
:::
:::::

## 

::::: columns
::: {.column width="60%"}
- In the Prescription Detail table, there may be multiple records with the same prescription number, because the prescription may cover multiple medications. There may also be multiple records with the same medication ID, because a single medication may appear on multiple prescriptions.
:::

::: {.column width="40%"}
![](images/clipboard-3132665686.png)
:::
:::::

## 

::::: columns
::: {.column width="60%"}
- In this case, to uniquely identify a line of a particular prescription, both identifiers are required: the prescription identifier and the medication identifier. This constitutes a *composite key*.
:::

::: {.column width="40%"}
![](images/clipboard-3132665686.png)
:::
:::::

## Database Queries

Once you have the database, you can answer questions such as:

- In which neighborhoods do the patients prescribed turbocycloxine live?

- How many patients have been prescribed turbocycloxine in the last month?

- Which active agents have been administered to patients living at Prados #520 in the last year?

## SQL

- Our current Business Intelligence tools and platforms allow us to easily create queries like the one in the previous example, simply by dragging and dropping fields and applying filters on a design canvas.

- Internally, the tools process queries using a database management language called SQL Structured Query Language.

- To create more complex queries, it may be necessary to create the query directly by writing the SQL code.

- We will not study SQL in this module.

# [Return to main page](https://alanrvazquez.github.io/TEC-IN2004B/)
